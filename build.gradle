plugins {
    id "java"
    id "checkstyle"
    id "jacoco"
    id "maven"
    id 'maven-publish'
    id "org.embulk.embulk-plugins" version "0.4.2"
}
repositories {
    mavenCentral()
    jcenter()
}

sourceCompatibility = 1.8
targetCompatibility = 1.8

version = "0.1.11"

def embulkVersion = '0.10.29'

dependencies {
    compileOnly "org.embulk:embulk-api:$embulkVersion"
    compileOnly "org.embulk:embulk-spi:$embulkVersion"

    compile("org.embulk:embulk-util-config:0.3.1") {
        // Conflict with Embulk Core
        exclude group: 'com.fasterxml.jackson.core', module: 'jackson-annotations'
        exclude group: 'com.fasterxml.jackson.core', module: 'jackson-core'
        exclude group: 'com.fasterxml.jackson.core', module: 'jackson-databind'
        exclude group: 'com.fasterxml.jackson.datatype', module: 'jackson-datatype-jdk8'
        exclude group: 'javax.validation', module: 'validation-api'
    }

    compile('org.embulk:embulk-util-retryhelper-jetty92:0.8.2')

    compile 'com.fasterxml.jackson.core:jackson-core:2.6.7'
    compile 'com.fasterxml.jackson.core:jackson-annotations:2.6.7'
    compile 'com.fasterxml.jackson.core:jackson-databind:2.6.7'
    compile 'com.fasterxml.jackson.datatype:jackson-datatype-jdk8:2.6.7'
    compile 'javax.validation:validation-api:1.1.0.Final'

    compile ('com.microsoft.azure:azure-storage:8.6.6') {
        exclude group: 'org.slf4j', module: 'slf4j-api'
        exclude group: 'com.fasterxml.jackson.core', module: 'jackson-core'
        exclude group: 'com.google.guava', module: 'guava'
        exclude group: 'org.slf4j', module: 'slf4j-api'
        exclude group: 'org.apache.commons', module: 'commons-lang3'
    }

    testCompile "junit:junit:4.13"
    testCompile "org.mockito:mockito-core:2.28.2"
    testCompile "org.embulk:embulk-core:$embulkVersion:tests"
    testCompile "org.embulk:embulk-deps:$embulkVersion"
    testCompile "org.embulk:embulk-junit4:$embulkVersion"
    testCompile "org.embulk:embulk-input-file:$embulkVersion"
    testCompile "org.embulk:embulk-formatter-csv:$embulkVersion"
    testCompile "org.embulk:embulk-parser-csv:$embulkVersion"
}

test {
    jvmArgs '-XX:MaxPermSize=128M', '-Xmx2048m'
    testLogging {
        events "passed", "skipped", "failed"
    }
}

checkstyle {
    configFile = file("${project.rootDir}/config/checkstyle/checkstyle.xml")
    toolVersion = '6.14.1'
}
checkstyleMain {
    configFile = file("${project.rootDir}/config/checkstyle/default.xml")
    ignoreFailures = true
}
checkstyleTest {
    configFile = file("${project.rootDir}/config/checkstyle/default.xml")
    ignoreFailures = true
}
task checkstyle(type: Checkstyle) {
    classpath = sourceSets.main.output + sourceSets.test.output
    source = sourceSets.main.allJava + sourceSets.test.allJava
}

jacocoTestReport {
    group = "Reporting"
    reports {
        xml.enabled false
        csv.enabled false
        html.destination file("${buildDir}/reports/coverage")
    }
}

embulkPlugin {
    mainClass = "org.embulk.output.azure_blob_storage.AzureBlobStorageFileOutputPlugin"
    category = "output"
    type = "azure_blob_storage"
}

gem {
    authors = [ "Satoshi Akama" ]
    email = [ "satoshiakama@gmail.com" ]
    summary = "Microsoft Azure Blob Storage file output plugin for Embulk"
    homepage = "https://github.com/embulk/embulk-output-azure_blob_storage"
    licenses = [ "Apache-2.0" ]
}